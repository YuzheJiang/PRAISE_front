{"remainingRequest":"/Users/reshika/cs20/air_pollution/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/reshika/cs20/air_pollution/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/reshika/cs20/air_pollution/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/reshika/cs20/air_pollution/client/src/components/Ping.vue?vue&type=template&id=86ddb6bc&","dependencies":[{"path":"/Users/reshika/cs20/air_pollution/client/src/components/Ping.vue","mtime":1592283186662},{"path":"/Users/reshika/cs20/air_pollution/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/reshika/cs20/air_pollution/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/reshika/cs20/air_pollution/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/reshika/cs20/air_pollution/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}