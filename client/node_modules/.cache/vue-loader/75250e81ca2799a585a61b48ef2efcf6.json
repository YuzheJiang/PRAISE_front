{"remainingRequest":"/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/src/components/Accview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/src/components/Accview.vue","mtime":1598341374506},{"path":"/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/node_modules/cache-loader/dist/cjs.js","mtime":1594193191162},{"path":"/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/node_modules/babel-loader/lib/index.js","mtime":1594193189891},{"path":"/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/node_modules/cache-loader/dist/cjs.js","mtime":1594193191162},{"path":"/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/node_modules/vue-loader/lib/index.js","mtime":1594193201324}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGQzIGZyb20gJ2QzJzsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IEV2ZW50QnVzIGZyb20gJ0AvZXZlbnRCdXMnOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdBY2NWaWV3JywKICBtZXRob2RzOiB7CiAgICBnZXRMZWdlbmQoZGl2SUQsIG5hbWVJRCkgewogICAgICBjb25zdCBzdmcgPSBkMy5zZWxlY3QoZGl2SUQpCiAgICAgICAgLmFwcGVuZCgnc3ZnJykKICAgICAgICAuYXR0cignd2lkdGgnLCAxMzApCiAgICAgICAgLmF0dHIoJ2hlaWdodCcsIDYwKTsKICAgICAgY29uc3QgbmFtZURhdGEgPSBbeyBuYW1lOiAnQ01BUV9kYXRhJywgY29sb3I6ICdsaWdodGJsdWUnIH0sCiAgICAgICAgeyBuYW1lOiAnICBPdXJfZGF0YScsIGNvbG9yOiAncGluaycgfSwgeyBuYW1lOiBuYW1lSUQsIGNvbG9yOiAnb3JhbmdlJyB9XTsKICAgICAgbmFtZURhdGEuZm9yRWFjaCgobCwgaSkgPT4gewogICAgICAgIGNvbnN0IGcgPSBzdmcuYXBwZW5kKCdnJykuYXR0cigndHJhbnNmb3JtJywgYHRyYW5zbGF0ZSg0LCAkeyhpICogMjApICsgNX0pYCk7CiAgICAgICAgZy5hcHBlbmQoJ3JlY3QnKQogICAgICAgICAgLmF0dHIoJ3dpZHRoJywgMTApCiAgICAgICAgICAuYXR0cignaGVpZ2h0JywgMTApCiAgICAgICAgICAuc3R5bGUoJ2ZpbGwnLCBsLmNvbG9yKTsKICAgICAgICBnLmFwcGVuZCgndGV4dCcpCiAgICAgICAgICAuYXR0cigneCcsIDExMCkKICAgICAgICAgIC5hdHRyKCd5JywgMTApCiAgICAgICAgICAuYXR0cigndGV4dC1hbmNob3InLCAnZW5kJykKICAgICAgICAgIC5zdHlsZSgndGV4dC10cmFuc2Zvcm0nLCAnY2FwaXRhbGl6ZScpCiAgICAgICAgICAudGV4dChsLm5hbWUpOwogICAgICB9KTsKICAgIH0sCiAgICBjaGFuZ2VWYWx1ZXMocmVzcG9uc2UpIHsKICAgICAgY29uc3Qgcm1zZU5hbWUgPSAnUk1TRV9DTTogJzsKICAgICAgY29uc3QgaW9hTmFtZSA9ICdJT0FfQ006ICc7CiAgICAgIGNvbnN0IHJtc2VOYW1lMiA9ICdSTVNFX09NOiAnOwogICAgICBjb25zdCBpb2FOYW1lMiA9ICdJT0FfT006ICc7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdSTVNFXzEnKS5pbm5lckhUTUwgPSBybXNlTmFtZS5jb25jYXQocmVzcG9uc2UuZGF0YVswXS5STVNFKS5mb250c2l6ZSgyKTsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ0lPQV8xJykuaW5uZXJIVE1MID0gaW9hTmFtZS5jb25jYXQocmVzcG9uc2UuZGF0YVswXS5JT0EpLmZvbnRzaXplKDIpOwogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnUk1TRV8yJykuaW5uZXJIVE1MID0gcm1zZU5hbWUyLmNvbmNhdChyZXNwb25zZS5kYXRhWzBdLlJNU0Vfb3VyKS5mb250c2l6ZSgyKTsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ0lPQV8yJykuaW5uZXJIVE1MID0gaW9hTmFtZTIuY29uY2F0KHJlc3BvbnNlLmRhdGFbMF0uSU9BX291cikuZm9udHNpemUoMik7CiAgICB9LAogICAgZ2V0TGluZUNoYXJ0KGRpdklELCBzdmdJRCwgcmVzcG9uc2UpIHsKICAgICAgZDMuc2VsZWN0KGAjJHtzdmdJRH1gKS5yZW1vdmUoKTsKICAgICAgY29uc3QgbWFyZ2luID0gewogICAgICAgIHRvcDogMzAsIHJpZ2h0OiAxMCwgYm90dG9tOiA3MCwgbGVmdDogMjUsCiAgICAgIH07CiAgICAgIGNvbnN0IHdpZHRoID0gNTAwIC0gbWFyZ2luLmxlZnQgLSBtYXJnaW4ucmlnaHQ7CiAgICAgIGNvbnN0IGhlaWdodCA9IDQwMCAtIG1hcmdpbi50b3AgLSBtYXJnaW4uYm90dG9tOwoKICAgICAgY29uc3Qgc3ZnID0gZDMuc2VsZWN0KGRpdklEKS5hcHBlbmQoJ3N2ZycpCiAgICAgICAgLmF0dHIoJ3dpZHRoJywgd2lkdGggKyBtYXJnaW4ubGVmdCArIG1hcmdpbi5yaWdodCkKICAgICAgICAuYXR0cignaGVpZ2h0JywgaGVpZ2h0ICsgbWFyZ2luLnRvcCArIG1hcmdpbi5ib3R0b20pCiAgICAgICAgLmF0dHIoJ2lkJywgc3ZnSUQpCiAgICAgICAgLmFwcGVuZCgnZycpCiAgICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsIGB0cmFuc2xhdGUoJHttYXJnaW4ubGVmdH0sJHttYXJnaW4udG9wfSlgKTsKCiAgICAgIGNvbnN0IG9ic0RhdGEgPSByZXNwb25zZS5kYXRhWzBdLmxpbmVfZGF0YS5maWx0ZXIoKHsgZGF0YSB9KSA9PiBbJ3N0YXRpb25fZGF0YSddLmluY2x1ZGVzKGRhdGEpKTsKICAgICAgY29uc3QgY21hcURhdGEgPSByZXNwb25zZS5kYXRhWzBdLmxpbmVfZGF0YS5maWx0ZXIoKHsgZGF0YSB9KSA9PiBbJ0NNQVFfZGF0YSddLmluY2x1ZGVzKGRhdGEpKTsKICAgICAgY29uc3Qgb3VyRGF0YSA9IHJlc3BvbnNlLmRhdGFbMF0ubGluZV9kYXRhLmZpbHRlcigoeyBkYXRhIH0pID0+IFsnT3VyX21ldGhvZF9kYXRhJ10uaW5jbHVkZXMoZGF0YSkpOwogICAgICBjb25zdCB4U2NhbGUgPSBkMy5zY2FsZVRpbWUoKQogICAgICAgIC5kb21haW4oZDMuZXh0ZW50KG9ic0RhdGEsIChkKSA9PiBkMy50aW1lUGFyc2UoJyVZLSVtLSVkICVIOiVNOiVTJykoZC50aW1lKSkpCiAgICAgICAgLnJhbmdlKFswLCB3aWR0aF0pOwoKICAgICAgY29uc3QgeVNjYWxlID0gZDMuc2NhbGVMaW5lYXIoKQogICAgICAgIC5kb21haW4oWzAsIGQzLm1heChjbWFxRGF0YSwgKGQpID0+IGQuUG9sbHV0YW50KV0pCiAgICAgICAgLnJhbmdlKFtoZWlnaHQsIDBdKTsKICAgICAgc3ZnLmFwcGVuZCgnZycpCiAgICAgICAgLmF0dHIoJ2NsYXNzJywgJ3ggYXhpcycpCiAgICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsIGB0cmFuc2xhdGUoMCwgJHtoZWlnaHR9KWApCiAgICAgICAgLmNhbGwoZDMuYXhpc0JvdHRvbSh4U2NhbGUpCiAgICAgICAgICAudGlja3MoMTIpCiAgICAgICAgICAudGlja0Zvcm1hdChkMy50aW1lRm9ybWF0KCclbS0lZCAlSDolTScpKSkKICAgICAgICAuc2VsZWN0QWxsKCd0ZXh0JykKICAgICAgICAuc3R5bGUoJ3RleHQtYW5jaG9yJywgJ2VuZCcpCiAgICAgICAgLmF0dHIoJ2R4JywgJy0uOGVtJykKICAgICAgICAuYXR0cignZHknLCAnLjE1ZW0nKQogICAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCAoKSA9PiAncm90YXRlKC02NSknKTsKICAgICAgc3ZnLmFwcGVuZCgnZycpCiAgICAgICAgLmF0dHIoJ2NsYXNzJywgJ3kgYXhpcycpCiAgICAgICAgLmNhbGwoZDMuYXhpc0xlZnQoeVNjYWxlKSk7CiAgICAgIGNvbnN0IGxpbmUgPSBkMy5saW5lKCkKICAgICAgICAueCgoZCkgPT4geFNjYWxlKG5ldyBEYXRlKGQudGltZSkpKQogICAgICAgIC55KChkKSA9PiB5U2NhbGUoZC5Qb2xsdXRhbnQpKQogICAgICAgIC5jdXJ2ZShkMy5jdXJ2ZU1vbm90b25lWCk7CiAgICAgIHN2Zy5hcHBlbmQoJ3BhdGgnKQogICAgICAgIC5kYXR1bShvYnNEYXRhKQogICAgICAgIC5hdHRyKCdjbGFzcycsICdsaW5lJykKICAgICAgICAuYXR0cignZCcsIGxpbmUpCiAgICAgICAgLmF0dHIoJ3N0cm9rZScsICdvcmFuZ2UnKTsKICAgICAgc3ZnLmFwcGVuZCgncGF0aCcpCiAgICAgICAgLmRhdHVtKGNtYXFEYXRhKQogICAgICAgIC5hdHRyKCdjbGFzcycsICdsaW5lJykKICAgICAgICAuYXR0cignZCcsIGxpbmUpCiAgICAgICAgLmF0dHIoJ3N0cm9rZScsICdsaWdodGJsdWUnKTsKICAgICAgc3ZnLmFwcGVuZCgncGF0aCcpCiAgICAgICAgLmRhdHVtKG91ckRhdGEpCiAgICAgICAgLmF0dHIoJ2NsYXNzJywgJ2xpbmUnKQogICAgICAgIC5hdHRyKCdkJywgbGluZSkKICAgICAgICAuYXR0cignc3Ryb2tlJywgJ3BpbmsnKTsKICAgIH0sCiAgICByZW5kZXJDaGFydDEoc3RDb2RlLCBwb2wsIHNELCBlRCwgRkhyKSB7CiAgICAgIGNvbnN0IHBhdGggPSAnaHR0cDovLzEyNy4wLjAuMTo1MDAwL2xpbmVDaGFydDEnOwogICAgICBheGlvcy5wb3N0KHBhdGgsIHsKICAgICAgICBTdF9jb2RlOiBzdENvZGUsCiAgICAgICAgcG9sbHV0YW50OiBwb2wsCiAgICAgICAgc3RfZGF0ZTogc0QsCiAgICAgICAgZW5fZGF0ZTogZUQsCiAgICAgICAgRl9ob3VyOiBGSHIsCiAgICAgIH0pCiAgICAgICAgLnRoZW4oKHJlcykgPT4gewogICAgICAgICAgdGhpcy5nZXRMaW5lQ2hhcnQoJyNsaW5lQ2hhcnQxJywgJ2NoYXJ0MScsIHJlcyk7CiAgICAgICAgICB0aGlzLmNoYW5nZVZhbHVlcyhyZXMpOwogICAgICAgIH0pOwogICAgfSwKICAgIHJlbmRlckNoYXJ0MigpIHsKICAgICAgY29uc3QgcGF0aCA9ICdodHRwOi8vMTI3LjAuMC4xOjUwMDAvbGluZUNoYXJ0Mic7CiAgICAgIGF4aW9zLnBvc3QocGF0aCwgewogICAgICAgIE9uc2l0ZV9jb2RlOiB0aGlzLk9uc2l0ZV9jb2RlLAogICAgICB9KQogICAgICAgIC50aGVuKChyZXMpID0+IHsKICAgICAgICAgIHRoaXMuZ2V0TGluZUNoYXJ0KCcjbGluZUNoYXJ0MicsICdjaGFydDInLCByZXMpOwogICAgICAgIH0pOwogICAgICAvLyB0aGlzLmdldExlZ2VuZCgnI2xlZ2VuZF9vbicsICdPbnNpdGVfZGF0YScpOwogICAgfSwKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldExlZ2VuZCgnI2xlZ2VuZF9vYnMnLCAnT0JTX2RhdGEnKTsKICAgIEV2ZW50QnVzLiRvbignc3VibWl0LWV2ZW50JywgKHN0YXRpb25Db2RlLCBwb2xsdXRhbnQsIHN0YXJ0RGF0ZSwgZW5kRGF0ZSwgRnV0SG91cikgPT4gewogICAgICB0aGlzLnJlbmRlckNoYXJ0MShzdGF0aW9uQ29kZSwgcG9sbHV0YW50LCBzdGFydERhdGUsIGVuZERhdGUsIEZ1dEhvdXIpOwogICAgfSk7CiAgfSwKfTsK"},{"version":3,"sources":["Accview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"Accview.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"row\">\n      <div class=\"col-12\">\n        <h4>AQ Monitoring station</h4>\n        <div class='legend_class' id='legend_obs'></div>\n        <div class='row'>\n          <div class='col-md-12' id='lineChart1'></div>\n        </div>\n        <div class='row'>\n          <div class=\"col-md-3\" id='RMSE_1'></div>\n          <div class=\"col-md-3 seperate\" id='IOA_1'></div>\n          <div class=\"col-md-3\" id='RMSE_2'></div>\n          <div class=\"col-md-3\" id='IOA_2'></div>\n        </div>\n      </div>\n      <hr>\n      <div class=\"col-12\" id='lineChart2'>\n        <h4>Onsite station</h4>\n        <div class='legend_class' id='legend_on'></div>\n      </div>\n  </div>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nimport axios from 'axios';\nimport EventBus from '@/eventBus';\n\nexport default {\n  name: 'AccView',\n  methods: {\n    getLegend(divID, nameID) {\n      const svg = d3.select(divID)\n        .append('svg')\n        .attr('width', 130)\n        .attr('height', 60);\n      const nameData = [{ name: 'CMAQ_data', color: 'lightblue' },\n        { name: '  Our_data', color: 'pink' }, { name: nameID, color: 'orange' }];\n      nameData.forEach((l, i) => {\n        const g = svg.append('g').attr('transform', `translate(4, ${(i * 20) + 5})`);\n        g.append('rect')\n          .attr('width', 10)\n          .attr('height', 10)\n          .style('fill', l.color);\n        g.append('text')\n          .attr('x', 110)\n          .attr('y', 10)\n          .attr('text-anchor', 'end')\n          .style('text-transform', 'capitalize')\n          .text(l.name);\n      });\n    },\n    changeValues(response) {\n      const rmseName = 'RMSE_CM: ';\n      const ioaName = 'IOA_CM: ';\n      const rmseName2 = 'RMSE_OM: ';\n      const ioaName2 = 'IOA_OM: ';\n      document.getElementById('RMSE_1').innerHTML = rmseName.concat(response.data[0].RMSE).fontsize(2);\n      document.getElementById('IOA_1').innerHTML = ioaName.concat(response.data[0].IOA).fontsize(2);\n      document.getElementById('RMSE_2').innerHTML = rmseName2.concat(response.data[0].RMSE_our).fontsize(2);\n      document.getElementById('IOA_2').innerHTML = ioaName2.concat(response.data[0].IOA_our).fontsize(2);\n    },\n    getLineChart(divID, svgID, response) {\n      d3.select(`#${svgID}`).remove();\n      const margin = {\n        top: 30, right: 10, bottom: 70, left: 25,\n      };\n      const width = 500 - margin.left - margin.right;\n      const height = 400 - margin.top - margin.bottom;\n\n      const svg = d3.select(divID).append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .attr('id', svgID)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`);\n\n      const obsData = response.data[0].line_data.filter(({ data }) => ['station_data'].includes(data));\n      const cmaqData = response.data[0].line_data.filter(({ data }) => ['CMAQ_data'].includes(data));\n      const ourData = response.data[0].line_data.filter(({ data }) => ['Our_method_data'].includes(data));\n      const xScale = d3.scaleTime()\n        .domain(d3.extent(obsData, (d) => d3.timeParse('%Y-%m-%d %H:%M:%S')(d.time)))\n        .range([0, width]);\n\n      const yScale = d3.scaleLinear()\n        .domain([0, d3.max(cmaqData, (d) => d.Pollutant)])\n        .range([height, 0]);\n      svg.append('g')\n        .attr('class', 'x axis')\n        .attr('transform', `translate(0, ${height})`)\n        .call(d3.axisBottom(xScale)\n          .ticks(12)\n          .tickFormat(d3.timeFormat('%m-%d %H:%M')))\n        .selectAll('text')\n        .style('text-anchor', 'end')\n        .attr('dx', '-.8em')\n        .attr('dy', '.15em')\n        .attr('transform', () => 'rotate(-65)');\n      svg.append('g')\n        .attr('class', 'y axis')\n        .call(d3.axisLeft(yScale));\n      const line = d3.line()\n        .x((d) => xScale(new Date(d.time)))\n        .y((d) => yScale(d.Pollutant))\n        .curve(d3.curveMonotoneX);\n      svg.append('path')\n        .datum(obsData)\n        .attr('class', 'line')\n        .attr('d', line)\n        .attr('stroke', 'orange');\n      svg.append('path')\n        .datum(cmaqData)\n        .attr('class', 'line')\n        .attr('d', line)\n        .attr('stroke', 'lightblue');\n      svg.append('path')\n        .datum(ourData)\n        .attr('class', 'line')\n        .attr('d', line)\n        .attr('stroke', 'pink');\n    },\n    renderChart1(stCode, pol, sD, eD, FHr) {\n      const path = 'http://127.0.0.1:5000/lineChart1';\n      axios.post(path, {\n        St_code: stCode,\n        pollutant: pol,\n        st_date: sD,\n        en_date: eD,\n        F_hour: FHr,\n      })\n        .then((res) => {\n          this.getLineChart('#lineChart1', 'chart1', res);\n          this.changeValues(res);\n        });\n    },\n    renderChart2() {\n      const path = 'http://127.0.0.1:5000/lineChart2';\n      axios.post(path, {\n        Onsite_code: this.Onsite_code,\n      })\n        .then((res) => {\n          this.getLineChart('#lineChart2', 'chart2', res);\n        });\n      // this.getLegend('#legend_on', 'Onsite_data');\n    },\n  },\n  mounted() {\n    this.getLegend('#legend_obs', 'OBS_data');\n    EventBus.$on('submit-event', (stationCode, pollutant, startDate, endDate, FutHour) => {\n      this.renderChart1(stationCode, pollutant, startDate, endDate, FutHour);\n    });\n  },\n};\n</script>\n\n<style>\n/* tags */\nh4{\n  text-align: center;\n  position: absolute;\n  width: 250px;\n  margin: 10px 50px 0 125px;\n}\nhr{\n  width: 100px;\n}\n/* class */\n.col-12{\n    height: 50vh;\n}\n.line {\n  fill: none;\n  stroke-width: 3;\n}\n.legend_class{\n  width: 130px;\n  height: 50px;\n  position: absolute;\n  margin: 5px 0 0 390px;\n}\n.metrics{\n  position: absolute;\n  width: 100px;\n  height: 20px;\n  margin: 408px 0 0 0;\n}\n/* ids */\n\n</style>\n"]}]}