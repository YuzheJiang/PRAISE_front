{"remainingRequest":"/Users/reshika/cs20/Research_Assistant/HSBC/air_pollution/PRAISE_front/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/reshika/cs20/Research_Assistant/HSBC/air_pollution/PRAISE_front/client/src/components/AccView.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/reshika/cs20/Research_Assistant/HSBC/air_pollution/PRAISE_front/client/src/components/AccView.vue","mtime":1595334081926},{"path":"/Users/reshika/cs20/Research_Assistant/HSBC/air_pollution/PRAISE_front/client/node_modules/css-loader/dist/cjs.js","mtime":1594193192731},{"path":"/Users/reshika/cs20/Research_Assistant/HSBC/air_pollution/PRAISE_front/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1594193201325},{"path":"/Users/reshika/cs20/Research_Assistant/HSBC/air_pollution/PRAISE_front/client/node_modules/postcss-loader/src/index.js","mtime":1594193198033},{"path":"/Users/reshika/cs20/Research_Assistant/HSBC/air_pollution/PRAISE_front/client/node_modules/cache-loader/dist/cjs.js","mtime":1594193191162},{"path":"/Users/reshika/cs20/Research_Assistant/HSBC/air_pollution/PRAISE_front/client/node_modules/vue-loader/lib/index.js","mtime":1594193201324}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi8qIENvbHVtbiAyICovCi8qIGlkcyAqLwojbGluZUNoYXJ0MSwgI2xpbmVDaGFydDIgewogIGhlaWdodDogNTAwcHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CiNUaGlyZF9yb3csICNTZWNvbmRfcm93LCAjRmlyc3Rfcm93LCAjRmlmdGhfcm93LCAjRm91cnRoX3Jvd3sKICBwYWRkaW5nOiAxJSAwOwp9CiNkYXRldGltZXsKICB3aWR0aDogMTIwcHg7CiAgcGFkZGluZy1ib3R0b206IDMlOwp9CiNob3VyX2ZpbHRlcnsKICBtYXJnaW4tbGVmdDogMTNweDsKICBtYXJnaW4tdG9wOiA1cHg7CiAgaGVpZ2h0OiAzMHB4Owp9Ci8qIHRhZyAqLwpoMiB7CiAgbWFyZ2luIDogNSUgMCAwIDA7Cn0KLyogY2xhc3MgKi8KLmxpbmUgewogICAgZmlsbDogbm9uZTsKICAgIHN0cm9rZS13aWR0aDogMzsKfQoub3ZlcmxheSB7CiAgZmlsbDogbm9uZTsKICBwb2ludGVyLWV2ZW50czogYWxsOwp9Ci5kb3QgewogICAgZmlsbDogI2ZmYWIwMDsKICAgIHN0cm9rZTogI2ZmZjsKfQoucDF7CiAgdGV4dC1hbGlnbjogbGVmdDsKfQouc3RfZHR7CiAgcGFkZGluZzowJTsKfQouZGF0ZXsKICB3aWR0aDogMTEwcHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9Ci5wYXJhbXsKICBwYWRkaW5nOjAlOwp9Ci5saW5lQ2hhcnRfbGVnZW5kewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBtYXJnaW46IDAgMCAwIDI0MHB4Owp9Ci5yb3ctMXsKICBoZWlnaHQ6IDQycHg7Cn0KLmVsZW17CiAgcG9zaXRpb246IGFic29sdXRlOwogIG1hcmdpbi10b3A6IDEwcHg7CiAgbWFyZ2luLWxlZnQ6IDIwcHg7Cn0K"},{"version":3,"sources":["AccView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AccView.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div class=\"AccView\">\n    <div class=\"row\" id=\"First_row\">\n      <div class=\"col-md-6 seperate\">\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <label class=\"labels text\">Station:</label>\n                </div>\n                <div class=\"col-md-6\">\n                  <select name=\"Please select a station\"\n                  id=\"filter_option\" v-model=\"Station_code\">\n                    <option v-for=\"Station_code in Station_codes\"\n                          v-bind:key=\"Station_code.code\">\n                          {{ Station_code.code }}\n                    </option>\n                  </select>\n                </div>\n            </div>\n        </div>\n      <div class=\"col-md-6\">\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <label class=\"labels text\">On-site:</label>\n          </div>\n          <div class=\"col-md-6\">\n            <input class=\"user_input form-control\"\n            @keyup.enter = \"renderChart2()\" v-model=\"Onsite_code\"\n            id=\"Onsite_Code\" placeholder=\"Enter On-site\">\n          </div>\n        </div>\n      </div>\n    </div>\n    <hr>\n    <div class=\"row\" id=\"Fourth_row\">\n      <div class=\"col-lg-6 seperate\">\n        <div class=\"row\">\n          <div class=\"col-md-4 param\">\n            <div class=\"col three_col\">\n                <label class=\"labels text date\">Start Date:</label>\n            </div>\n            <div class=\"col three_col\">\n                <date-picker v-model=\"start_date\" lang=\"en\" id=\"datetime\"\n                  type=\"datetime\" valueType=\"format\"\n                  format=\"YYYY-MM-DD HH:mm:ss\">\n                </date-picker>\n            </div>\n          </div>\n          <div class=\"col-md-4 param\">\n            <div class=\"col three_col\">\n                <label class=\"labels text date\">End Date:</label>\n            </div>\n            <div class=\"col three_col\">\n                <date-picker v-model=\"end_date\" lang=\"en\" id=\"datetime\"\n                  type=\"datetime\" valueType=\"format\"\n                  format=\"YYYY-MM-DD HH:mm:ss\">\n                </date-picker>\n            </div>\n          </div>\n          <div class=\"col-md-3 param\">\n            <div class=\"col three_col\">\n                <label class=\"labels text date\">Future Hour:</label>\n            </div>\n            <div class=\"col three_col\">\n              <select id=\"hour_filter\" v-model=\"Fut_hr\">\n                <option v-for=\"Fut_hr in Fut_hrs\"\n                  v-bind:key=\"Fut_hr.hour\">\n                  {{ Fut_hr.hour }}\n                </option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <hr>\n    <div class=\"row\" id=\"Fifth_row\">\n      <div class=\"col-md-6 seperate\">\n        <button type=\"button\" class=\"button btn btn-dark btn-lg text\"\n                @click=\"submit1($event)\">Submit</button>\n      </div>\n    </div>\n    <hr>\n    <div class=\"row\" id=\"Second_row\">\n      <div class=\"col-lg-6 seperate\" id='lineChart1'>\n        <div class=\"lineChart_legend\" id=\"legend_1\">\n        </div>\n      </div>\n      <div class=\"col-lg-6\" id='lineChart2'>\n         <div class=\"lineChart_legend\" id=\"legend_2\">\n        </div>\n      </div>\n    </div>\n    <hr>\n    <div class=\"row\" id=\"Third_row\">\n      <div class=\"col-md-6 seperate\">\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <label class=\"labels text\">IOA:</label>\n          </div>\n          <div class=\"col-md-6\">\n            <h6 class=\"elem\" id='IOA_1'>IOA</h6>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <label class=\"labels text\">RMSE:</label>\n          </div>\n          <div class=\"col-md-6\">\n            <h6 class=\"elem\" id='RMSE_1'>RMSE</h6>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-6 seperate\">\n        <div class=\"row row-1\">\n            <h6 class=\"elem\" id='IOA_2'>IOA</h6>\n        </div>\n        <div class=\"row row-1\">\n            <h6 class=\"elem\" id='RMSE_2'>RMSE</h6>\n        </div>\n      </div>\n    </div>\n</div>\n</template>\n<script>\nimport * as d3 from 'd3';\nimport axios from 'axios';\nimport EventBus from '@/eventBus';\n\nexport default {\n  name: 'AccView',\n  data() {\n    return {\n      Station_codes: [\n        { code: 'CB_R' },\n        { code: 'CL_R' },\n        { code: 'CW_A' },\n        { code: 'EN_A' },\n        { code: 'KC_A' },\n        { code: 'KT_A' },\n        { code: 'MB_A' },\n        { code: 'MKaR' },\n        { code: 'SP_A' },\n        { code: 'ST_A' },\n        { code: 'TC_A' },\n        { code: 'TK_A' },\n        { code: 'TM_A' },\n        { code: 'TP_A' },\n        { code: 'TW_A' },\n        { code: 'YL_A' },\n      ],\n      Fut_hrs: [\n        { hour: '0' },\n        { hour: '1' },\n        { hour: '2' },\n        { hour: '3' },\n        { hour: '4' },\n        { hour: '5' },\n        { hour: '6' },\n        { hour: '7' },\n        { hour: '8' },\n        { hour: '9' },\n        { hour: '10' },\n        { hour: '11' },\n        { hour: '12' },\n      ],\n      Fut_hr: '0',\n      Station_code: 'CB_R',\n      Onsite_code: 'AA',\n      start_date: '2017-01-02 21:00:00',\n      end_date: '2017-01-03 21:00:00',\n      pollutant: 'PM10',\n    };\n  },\n  methods: {\n    getLegend() {\n      const svg = d3.select('#legend_1')\n        .append('svg')\n        .attr('width', 130)\n        .attr('height', 60);\n      const nameData = [{ name: 'CMAQ_data', color: 'lightblue' },\n        { name: 'OBS_data', color: 'orange' }];\n      nameData.forEach((l, i) => {\n        const g = svg.append('g').attr('transform', `translate(4, ${(i * 20) + 5})`);\n        g.append('rect')\n          .attr('width', 10)\n          .attr('height', 10)\n          .style('fill', l.color);\n        g.append('text')\n          .attr('x', 110)\n          .attr('y', 10)\n          .attr('text-anchor', 'end')\n          .style('text-transform', 'capitalize')\n          .text(l.name);\n      });\n    },\n    changeValues(response) {\n      document.getElementById('RMSE_1').innerHTML = response.data[0].RMSE;\n      document.getElementById('IOA_1').innerHTML = response.data[0].IOA;\n    },\n    getMetricsdata() {\n      const path = 'http://127.0.0.1:5000/getMetrics';\n      axios.post(path, {\n        St_code: this.Station_code,\n        pollutant: this.pollutant,\n        st_date: this.start_date,\n        en_date: this.end_date,\n        F_hour: this.Fut_hr,\n      })\n        .then((res) => {\n          this.changeValues(res);\n        });\n    },\n    getLineChart(divID, svgID, response) {\n      d3.select(`#${svgID}`).remove();\n      const margin = {\n        top: 30, right: 20, bottom: 60, left: 30,\n      };\n      const width = 400 - margin.left - margin.right;\n      const height = 500 - margin.top - margin.bottom;\n\n      const svg = d3.select(divID).append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .attr('id', svgID)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`);\n\n      const obsData = response.data.filter(({ data }) => ['Obs_data'].includes(data));\n      const cmaqData = response.data.filter(({ data }) => ['CMAQ_data'].includes(data));\n      const xScale = d3.scaleTime()\n        .domain(d3.extent(obsData, (d) => d3.timeParse('%Y-%m-%d %H:%M:%S')(d.time)))\n        .range([0, width]);\n\n      const yScale = d3.scaleLinear()\n        .domain([0, d3.max(cmaqData, (d) => d.pollutant)])\n        .range([height, 0]);\n\n      svg.append('g')\n        .attr('class', 'x axis')\n        .attr('transform', `translate(0, ${height})`)\n        .call(d3.axisBottom(xScale)\n          .tickFormat(d3.timeFormat('%m-%d %H:%M'))\n          .tickValues(obsData.map((d) => new Date(d.time))))\n        .selectAll('text')\n        .style('text-anchor', 'end')\n        .attr('dx', '-.8em')\n        .attr('dy', '.15em')\n        .attr('transform', () => 'rotate(-65)');\n      svg.append('g')\n        .attr('class', 'y axis')\n        .call(d3.axisLeft(yScale));\n      const line = d3.line()\n        .x((d) => xScale(new Date(d.time)))\n        .y((d) => yScale(d.pollutant))\n        .curve(d3.curveMonotoneX);\n      svg.append('path')\n        .datum(obsData)\n        .attr('class', 'line')\n        .attr('d', line)\n        .attr('stroke', 'orange');\n      svg.append('path')\n        .datum(cmaqData)\n        .attr('class', 'line')\n        .attr('d', line)\n        .attr('stroke', 'lightblue');\n      // svg.selectAll('.dot')\n      //   .data(lineData)\n      //   .enter().append('circle') // Uses the enter().append() method\n      //   .attr('class', 'dot') // Assign a class for styling\n      //   .attr('cx', (d) => xScale(new Date(d.time)))\n      //   .attr('cy', (d) => yScale(d.pollutant))\n      //   .attr('r', 5);\n    },\n    submit1() {\n      this.renderChart1();\n    },\n    renderChart1() {\n      const path = 'http://127.0.0.1:5000/lineChart1';\n      axios.post(path, {\n        St_code: this.Station_code,\n        pollutant: this.pollutant,\n        st_date: this.start_date,\n        en_date: this.end_date,\n        bs_date: this.base_date,\n        F_hour: this.Fut_hr,\n      })\n        .then((res) => {\n          this.getLineChart('#lineChart1', 'chart1', res);\n        });\n    },\n    renderChart2() {\n      const path = 'http://127.0.0.1:5000/lineChart2';\n      axios.post(path, {\n        Onsite_code: this.Onsite_code,\n      })\n        .then((res) => {\n          this.getLineChart('#lineChart2', 'chart2', res);\n        });\n    },\n  },\n  mounted() {\n    EventBus.$on('clicked-event', (selected) => {\n      this.pollutant = selected;\n    });\n    this.renderChart1();\n    this.getMetricsdata();\n    this.getLegend();\n    // this.getLegend();\n    // this.drawLineLegend();\n  },\n};\n</script>\n<style>\n/* Column 2 */\n/* ids */\n#lineChart1, #lineChart2 {\n  height: 500px;\n  text-align: center;\n}\n#Third_row, #Second_row, #First_row, #Fifth_row, #Fourth_row{\n  padding: 1% 0;\n}\n#datetime{\n  width: 120px;\n  padding-bottom: 3%;\n}\n#hour_filter{\n  margin-left: 13px;\n  margin-top: 5px;\n  height: 30px;\n}\n/* tag */\nh2 {\n  margin : 5% 0 0 0;\n}\n/* class */\n.line {\n    fill: none;\n    stroke-width: 3;\n}\n.overlay {\n  fill: none;\n  pointer-events: all;\n}\n.dot {\n    fill: #ffab00;\n    stroke: #fff;\n}\n.p1{\n  text-align: left;\n}\n.st_dt{\n  padding:0%;\n}\n.date{\n  width: 110px;\n  text-align: center;\n}\n.param{\n  padding:0%;\n}\n.lineChart_legend{\n  position: absolute;\n  margin: 0 0 0 240px;\n}\n.row-1{\n  height: 42px;\n}\n.elem{\n  position: absolute;\n  margin-top: 10px;\n  margin-left: 20px;\n}\n</style>\n"]}]}