{"remainingRequest":"/Users/reshika/cs20/Research_Assistant/HSBC/air_pollution/PRAISE_front/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/reshika/cs20/Research_Assistant/HSBC/air_pollution/PRAISE_front/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/reshika/cs20/Research_Assistant/HSBC/air_pollution/PRAISE_front/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/reshika/cs20/Research_Assistant/HSBC/air_pollution/PRAISE_front/client/src/components/AccView.vue?vue&type=template&id=1a845dc6&","dependencies":[{"path":"/Users/reshika/cs20/Research_Assistant/HSBC/air_pollution/PRAISE_front/client/src/components/AccView.vue","mtime":1594194346712},{"path":"/Users/reshika/cs20/Research_Assistant/HSBC/air_pollution/PRAISE_front/client/node_modules/cache-loader/dist/cjs.js","mtime":1594193191162},{"path":"/Users/reshika/cs20/Research_Assistant/HSBC/air_pollution/PRAISE_front/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1594193201325},{"path":"/Users/reshika/cs20/Research_Assistant/HSBC/air_pollution/PRAISE_front/client/node_modules/cache-loader/dist/cjs.js","mtime":1594193191162},{"path":"/Users/reshika/cs20/Research_Assistant/HSBC/air_pollution/PRAISE_front/client/node_modules/vue-loader/lib/index.js","mtime":1594193201324}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiQWNjVmlldyIgfSwgWwogICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3ciLCBhdHRyczogeyBpZDogIkZpcnN0X3JvdyIgfSB9LCBbCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLW1kLTYgc2VwZXJhdGUiIH0sIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJvdyIgfSwgWwogICAgICAgICAgX3ZtLl9tKDApLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtbWQtNiIgfSwgWwogICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uU3RhdGlvbl9jb2RlLAogICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiU3RhdGlvbl9jb2RlIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ1c2VyX2lucHV0IGZvcm0tY29udHJvbCIsCiAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJTdGF0aW9uX0NvZGUiLCBwbGFjZWhvbGRlcjogIkVudGVyIFN0YXRpb24iIH0sCiAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5TdGF0aW9uX2NvZGUgfSwKICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAga2V5dXA6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICAgICAgISRldmVudC50eXBlLmluZGV4T2YoImtleSIpICYmCiAgICAgICAgICAgICAgICAgICAgX3ZtLl9rKCRldmVudC5rZXlDb2RlLCAiZW50ZXIiLCAxMywgJGV2ZW50LmtleSwgIkVudGVyIikKICAgICAgICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGwKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnJlbmRlckNoYXJ0MSgpCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICBfdm0uU3RhdGlvbl9jb2RlID0gJGV2ZW50LnRhcmdldC52YWx1ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICAgIF0pCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLW1kLTYiIH0sIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJvdyIgfSwgWwogICAgICAgICAgX3ZtLl9tKDEpLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtbWQtNiIgfSwgWwogICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uT25zaXRlX2NvZGUsCiAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJPbnNpdGVfY29kZSIKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAidXNlcl9pbnB1dCBmb3JtLWNvbnRyb2wiLAogICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAiT25zaXRlX0NvZGUiLCBwbGFjZWhvbGRlcjogIkVudGVyIE9uLXNpdGUiIH0sCiAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5PbnNpdGVfY29kZSB9LAogICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICBrZXl1cDogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgIGlmICgKICAgICAgICAgICAgICAgICAgICAhJGV2ZW50LnR5cGUuaW5kZXhPZigia2V5IikgJiYKICAgICAgICAgICAgICAgICAgICBfdm0uX2soJGV2ZW50LmtleUNvZGUsICJlbnRlciIsIDEzLCAkZXZlbnQua2V5LCAiRW50ZXIiKQogICAgICAgICAgICAgICAgICApIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbAogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0ucmVuZGVyQ2hhcnQyKCkKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgewogICAgICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIF92bS5PbnNpdGVfY29kZSA9ICRldmVudC50YXJnZXQudmFsdWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgICBdKQogICAgICAgIF0pCiAgICAgIF0pCiAgICBdKSwKICAgIF9jKCJociIpLAogICAgX3ZtLl9tKDIpLAogICAgX2MoImhyIiksCiAgICBfdm0uX20oMykKICBdKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC1tZC02IiB9LCBbCiAgICAgIF9jKCJsYWJlbCIsIHsgc3RhdGljQ2xhc3M6ICJsYWJlbHMgdGV4dCIgfSwgW192bS5fdigiU3RhdGlvbjoiKV0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC1tZC02IiB9LCBbCiAgICAgIF9jKCJsYWJlbCIsIHsgc3RhdGljQ2xhc3M6ICJsYWJlbHMgdGV4dCIgfSwgW192bS5fdigiT24tc2l0ZToiKV0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJvdyIsIGF0dHJzOiB7IGlkOiAiU2Vjb25kX3JvdyIgfSB9LCBbCiAgICAgIF9jKCJkaXYiLCB7CiAgICAgICAgc3RhdGljQ2xhc3M6ICJjb2wtbGctNiBzZXBlcmF0ZSIsCiAgICAgICAgYXR0cnM6IHsgaWQ6ICJsaW5lQ2hhcnQxIiB9CiAgICAgIH0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC1sZy02IiwgYXR0cnM6IHsgaWQ6ICJsaW5lQ2hhcnQyIiB9IH0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJvdyIsIGF0dHJzOiB7IGlkOiAiVGhpcmRfcm93IiB9IH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtbWQtNiBzZXBlcmF0ZSIgfSwgWwogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicm93IiB9LCBbCiAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC1tZC02IiB9LCBbCiAgICAgICAgICAgIF9jKCJsYWJlbCIsIHsgc3RhdGljQ2xhc3M6ICJsYWJlbHMgdGV4dCIgfSwgW192bS5fdigiSU9BOiIpXSkKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtbWQtNiIgfSwgW19jKCJwIiwgW192bS5fdigiSU9BIildKV0pCiAgICAgICAgXSksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3ciIH0sIFsKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sLW1kLTYiIH0sIFsKICAgICAgICAgICAgX2MoImxhYmVsIiwgeyBzdGF0aWNDbGFzczogImxhYmVscyB0ZXh0IiB9LCBbX3ZtLl92KCJSTVNFOiIpXSkKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wtbWQtNiIgfSwgW19jKCJwIiwgW192bS5fdigiUk1TRSIpXSldKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbC1tZC02IHNlcGVyYXRlIiB9LCBbCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3ciIH0sIFsKICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogInAxIiB9LCBbX3ZtLl92KCJJT0EiKV0pCiAgICAgICAgXSksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJyb3ciIH0sIFsKICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogInAxIiB9LCBbX3ZtLl92KCJSTVNFIildKQogICAgICAgIF0pCiAgICAgIF0pCiAgICBdKQogIH0KXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}