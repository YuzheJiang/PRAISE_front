{"remainingRequest":"/Users/reshika/cs20/Research_Assistant/HSBC/New_layout/PRAISE_front/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/reshika/cs20/Research_Assistant/HSBC/New_layout/PRAISE_front/client/src/components/mappyview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/reshika/cs20/Research_Assistant/HSBC/New_layout/PRAISE_front/client/src/components/mappyview.vue","mtime":1596282701025},{"path":"/Users/reshika/cs20/Research_Assistant/HSBC/New_layout/PRAISE_front/client/node_modules/cache-loader/dist/cjs.js","mtime":1594193191162},{"path":"/Users/reshika/cs20/Research_Assistant/HSBC/New_layout/PRAISE_front/client/node_modules/babel-loader/lib/index.js","mtime":1594193189891},{"path":"/Users/reshika/cs20/Research_Assistant/HSBC/New_layout/PRAISE_front/client/node_modules/cache-loader/dist/cjs.js","mtime":1594193191162},{"path":"/Users/reshika/cs20/Research_Assistant/HSBC/New_layout/PRAISE_front/client/node_modules/vue-loader/lib/index.js","mtime":1594193201324}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["mappyview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"mappyview.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"row\">\n      <div class=\"col-12\">\n         <div class=\"row\">\n           <div class=\"col-md-3 first_map\">\n            <h6 id=\"Future_hour\">Future hour:</h6>\n          </div>\n          <div class=\"col-md-5 first_map\">\n            <h4 id='heading_1'>CMAQ Result</h4>\n          </div>\n          <div class=\"col-md-4 first_map\">\n            <p id=\"legend_name\">PM10</p>\n            <div class = 'legend' id='legend'></div>\n          </div>\n        </div>\n        <div class='map' id='map_1'></div>\n      </div>\n      <hr>\n      <div class=\"col-12\">\n         <h4 id='heading_2'>Our Method Result</h4>\n         <div class='map' id='map_2'></div>\n      </div>\n  </div>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport EventBus from '@/eventBus';\n\nexport default {\n  name: 'mappyview',\n  data() {\n    return {\n      colorData: [{ offset: '0%', color: '#f3e79b' }, { offset: '18.28%', color: '#fac484' },\n        { offset: '28.56%', color: '#f8a07e' }, { offset: '42.84%', color: '#eb7f86' },\n        { offset: '57.12%', color: '#ce6693' }, { offset: '71.4%', color: '#a059a0' },\n        { offset: '100%', color: '#5c53a5' }],\n      extent: [0, 80],\n      array: [12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0],\n      index: 12,\n      Method1: 'CMAQ',\n      Method2: 'Our_Method',\n      obStation: null,\n      map1: null,\n      map2: null,\n      flag: false,\n      polygon_data: [],\n      geodata: null,\n    };\n  },\n  watch: {\n    date(newValue, oldValue) {\n      this.oldDate = oldValue;\n    },\n  },\n  methods: {\n    initMap() {\n      this.map1 = L.map('map_1').setView([22.34385, 114.1289], 10);\n      this.map2 = L.map('map_2').setView([22.34385, 114.1289], 10);\n      L.tileLayer('https://cartodb-basemaps-{s}.global.ssl.fastly.net/rastertiles/voyager/{z}/{x}/{y}.png',\n        { attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>, &copy; <a href=\"https://carto.com/attribution\">CARTO</a>' }).addTo(this.map1);\n      L.tileLayer('https://cartodb-basemaps-{s}.global.ssl.fastly.net/rastertiles/voyager/{z}/{x}/{y}.png',\n        { attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>, &copy; <a href=\"https://carto.com/attribution\">CARTO</a>' }).addTo(this.map2);\n    },\n    drawGrids(data, hr, map) {\n      if (map === 'CMAQ') {\n        this.mappy = this.map1;\n      } else {\n        this.mappy = this.map2;\n      }\n      this.clearLayer();\n      let polygon;\n      const colors = d3.scaleQuantize()\n        .domain(this.extent)\n        .range(this.colorData.map((d) => d.color));\n      this.geodata = data;\n      this.geodata.forEach((l) => {\n        const layer = l[hr];\n        const val = layer.pollutant.toFixed(2);\n        const obsVal = layer.Obs_con;\n        if (layer.data === 'Observatory_data') {\n          polygon = L.polygon(layer.coord, {\n            fillColor: 'red', weight: 0, opacity: 0, fillOpacity: 0.5,\n          }).bindTooltip(`${map}: ${val.toString()}\\n Obs: ${obsVal.toString()}`);\n        } else {\n          polygon = L.polygon(layer.coord, {\n            fillColor: colors(layer.pollutant), weight: 0, opacity: 0, fillOpacity: 0.5,\n          }).bindTooltip(`${map}: ${val.toString()}`);\n        }\n        polygon.addTo(this.mappy);\n        this.polygon_data.push(polygon);\n      });\n    },\n    drawLegend(divID) {\n      const xScale = d3.scaleLinear()\n        .range([0, 180 - (9 * 2)])\n        .domain(this.extent);\n      const xAxis = d3.axisBottom(xScale)\n        .tickSize(8 * 2)\n        .tickValues(this.extent);\n      const svg = d3.select(divID)\n        .append('svg')\n        .attr('width', 180)\n        .attr('height', 35);\n      const g = svg.append('g').attr('transform', 'translate(3, 5)');\n      const defs = svg.append('defs');\n      const linearGradient = defs.append('linearGradient').attr('id', 'myGradient');\n      linearGradient.selectAll('stop')\n        .data(this.colorData)\n        .enter().append('stop')\n        .attr('offset', (d) => d.offset)\n        .attr('stop-color', (d) => d.color);\n      g.append('rect')\n        .attr('width', 180 - (9 * 2))\n        .attr('height', 8)\n        .style('fill', 'url(#myGradient)');\n      g.append('g')\n        .call(xAxis);\n    },\n    clearLayer() {\n      this.polygon_data.forEach((layer) => {\n        this.map1.removeLayer(layer);\n      });\n    },\n    checkCondition(pol, hr, nD, oD, map) {\n      this.changeName(pol, hr);\n      if (oD === nD) {\n        this.drawGrids(this.geodata, hr, map);\n      } else {\n        this.getdata(pol, hr, nD);\n      }\n    },\n    getdata(pol, hr, nD, method) {\n      const path = 'http://127.0.0.1:5000/data';\n      axios.post(path, {\n        Method: method,\n        pollutants: pol,\n        Date: nD,\n        Future_hour: hr,\n      })\n        .then((res) => {\n          if (method === 'CMAQ') {\n            console.log(res.data);\n            this.drawGrids(res.data, hr, this.Method1);\n          } else {\n            this.drawGrids(res.data, hr, this.Method2);\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    doAnimation(j, pol, nD, oD) {\n      let x = j;\n      setTimeout(() => {\n        if (this.flag === true) {\n          const hour = this.array[x];\n          this.checkCondition(pol, hour, nD, oD);\n          x -= 1;\n          if (x >= 0) {\n            this.index = x;\n            this.doAnimation(x, pol, nD, oD);\n          }\n        }\n      }, 1000);\n    },\n    changeName(pol, hr) {\n      const legName = pol;\n      const fhName = 'Future_hour:';\n      document.getElementById('legend_name').innerHTML = legName.concat('  Concentration');\n      document.getElementById('Future_hour').innerHTML = fhName.concat(hr);\n    },\n    submitFunc(pol, hr, nD, oD, map) {\n      if (this.index === 0) {\n        this.index = 12;\n      } else {\n        this.index = this.array.indexOf(parseInt(hr, 10));\n      }\n      this.checkCondition(pol, hr, nD, oD, map);\n    },\n    playFunc(pol, nD, oD) {\n      this.flag = true;\n      this.doAnimation(this.index, pol, nD, oD);\n    },\n    stopFunc() {\n      this.flag = false;\n    },\n  },\n  mounted() {\n    this.initMap();\n    this.drawLegend('#legend');\n    EventBus.$on('clicked-event', (pollutant, hour, newDate, oldDate) => {\n      if (this.geodata === null) {\n        this.changeName(pollutant, hour);\n        this.getdata(pollutant, hour, newDate, this.Method1);\n      } else {\n        this.submitFunc(pollutant, hour, newDate, oldDate, this.Method1);\n      }\n    });\n    EventBus.$on('play-event', (pollutant, newDate, oldDate) => {\n      this.playFunc(pollutant, newDate, oldDate);\n    });\n    EventBus.$on('stop-event', () => {\n      this.stopFunc();\n    });\n  },\n};\n</script>\n\n<style>\n/* tags */\n/* h4{\n  text-align: left;\n  margin: 10px 0 0 250px;\n  width: 250px;\n} */\n/* class */\n.col-12{\n  height: 50vh;\n}\n.first_map{\n  padding: 0;\n}\n.legend{\n  width: 180px;\n  margin-left: 45px;\n}\n/* ids */\n#heading_1{\n  width: 150px;\n  margin: 25px 0 0 95px;\n}\n#heading_2{\n  width: 250px;\n  margin: 15px 0 0 195px;\n}\n#Future_hour{\n  text-align: left;\n  width: 105px;\n  margin: 20px 0 0 5px;\n}\n#legend_name{\n  text-align: left;\n  margin: 5px 0 0 47px;\n  font-size: 12px;\n  width: 150px;\n}\n#map_1{\n  margin: 10px 0 0 10px;\n  height: 350px;\n  width: 630px;\n}\n#map_2{\n  margin: 50px 0 0 10px;\n  height: 350px;\n  width: 630px;\n}\n</style>\n"]}]}