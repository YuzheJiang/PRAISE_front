<<<<<<< HEAD
{"remainingRequest":"/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/node_modules/babel-loader/lib/index.js!/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/src/components/Accview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/src/components/Accview.vue","mtime":1598405245176},{"path":"/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/node_modules/cache-loader/dist/cjs.js","mtime":1594193191162},{"path":"/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/node_modules/babel-loader/lib/index.js","mtime":1594193189891},{"path":"/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/node_modules/cache-loader/dist/cjs.js","mtime":1594193191162},{"path":"/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/node_modules/vue-loader/lib/index.js","mtime":1594193201324}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Accview.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"row\">\n      <div class=\"col-12\">\n        <h4>AQ Monitoring station</h4>\n        <div class='legend_class' id='legend_obs'></div>\n        <div class='row'>\n          <div class='col-md-12' id='lineChart1'></div>\n        </div>\n        <div class='row'>\n          <div class=\"col-md-3\" id='RMSE_1'></div>\n          <div class=\"col-md-3 seperate\" id='IOA_1'></div>\n          <div class=\"col-md-3\" id='RMSE_2'></div>\n          <div class=\"col-md-3\" id='IOA_2'></div>\n        </div>\n      </div>\n      <hr>\n      <div class=\"col-12\">\n        <h4>Onsite station</h4>\n        <div class='legend_class' id='legend_on'></div>\n        <div class='row'>\n          <div class='col-md-12' id='lineChart2'></div>\n        </div>\n        <div class='row'>\n          <div class=\"col-md-3\" id='RMSE_1_on'></div>\n          <div class=\"col-md-3 seperate\" id='IOA_1_on'></div>\n          <div class=\"col-md-3\" id='RMSE_2_on'></div>\n          <div class=\"col-md-3\" id='IOA_2_on'></div>\n        </div>\n      </div>\n  </div>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nimport axios from 'axios';\nimport EventBus from '@/eventBus';\n\nexport default {\n  name: 'AccView',\n  methods: {\n    getLegend(divID, nameID) {\n      const svg = d3.select(divID)\n        .append('svg')\n        .attr('width', 130)\n        .attr('height', 60);\n      const nameData = [{ name: 'CMAQ_data', color: 'lightblue' },\n        { name: '  Our_data', color: 'pink' }, { name: nameID, color: 'orange' }];\n      nameData.forEach((l, i) => {\n        const g = svg.append('g').attr('transform', `translate(4, ${(i * 20) + 5})`);\n        g.append('rect')\n          .attr('width', 10)\n          .attr('height', 10)\n          .style('fill', l.color);\n        g.append('text')\n          .attr('x', 110)\n          .attr('y', 10)\n          .attr('text-anchor', 'end')\n          .style('text-transform', 'capitalize')\n          .text(l.name);\n      });\n    },\n    changeValues(response) {\n      const rmseName = 'RMSE_CM: ';\n      const ioaName = 'IOA_CM: ';\n      const rmseName2 = 'RMSE_OM: ';\n      const ioaName2 = 'IOA_OM: ';\n      document.getElementById('RMSE_1').innerHTML = rmseName.concat(response.data[0].RMSE).fontsize(2);\n      document.getElementById('IOA_1').innerHTML = ioaName.concat(response.data[0].IOA).fontsize(2);\n      document.getElementById('RMSE_2').innerHTML = rmseName2.concat(response.data[0].RMSE_our).fontsize(2);\n      document.getElementById('IOA_2').innerHTML = ioaName2.concat(response.data[0].IOA_our).fontsize(2);\n    },\n    changeValues2(response) {\n      const rmseName = 'RMSE_CM: ';\n      const ioaName = 'IOA_CM: ';\n      const rmseName2 = 'RMSE_OM: ';\n      const ioaName2 = 'IOA_OM: ';\n      document.getElementById('RMSE_1_on').innerHTML = rmseName.concat(response.data[0].RMSE).fontsize(2);\n      document.getElementById('IOA_1_on').innerHTML = ioaName.concat(response.data[0].IOA).fontsize(2);\n      document.getElementById('RMSE_2_on').innerHTML = rmseName2.concat(response.data[0].RMSE_our).fontsize(2);\n      document.getElementById('IOA_2_on').innerHTML = ioaName2.concat(response.data[0].IOA_our).fontsize(2);\n    },\n    getLineChart(divID, svgID, response) {\n      d3.select(`#${svgID}`).remove();\n      const margin = {\n        top: 30, right: 10, bottom: 70, left: 25,\n      };\n      const width = 500 - margin.left - margin.right;\n      const height = 400 - margin.top - margin.bottom;\n\n      const svg = d3.select(divID).append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .attr('id', svgID)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`);\n\n      const obsData = response.data[0].line_data.filter(({ data }) => ['station_data'].includes(data));\n      const cmaqData = response.data[0].line_data.filter(({ data }) => ['CMAQ_data'].includes(data));\n      const ourData = response.data[0].line_data.filter(({ data }) => ['Our_method_data'].includes(data));\n      const xScale = d3.scaleTime()\n        .domain(d3.extent(obsData, (d) => d3.timeParse('%Y-%m-%d %H:%M:%S')(d.time)))\n        .range([0, width]);\n\n      const yScale = d3.scaleLinear()\n        .domain([0, d3.max(cmaqData, (d) => d.Pollutant)])\n        .range([height, 0]);\n      svg.append('g')\n        .attr('class', 'x axis')\n        .attr('transform', `translate(0, ${height})`)\n        .call(d3.axisBottom(xScale)\n          .ticks(12)\n          .tickFormat(d3.timeFormat('%m-%d %H:%M')))\n        .selectAll('text')\n        .style('text-anchor', 'end')\n        .attr('dx', '-.8em')\n        .attr('dy', '.15em')\n        .attr('transform', () => 'rotate(-65)');\n      svg.append('g')\n        .attr('class', 'y axis')\n        .call(d3.axisLeft(yScale));\n      const line = d3.line()\n        .x((d) => xScale(new Date(d.time)))\n        .y((d) => yScale(d.Pollutant))\n        .curve(d3.curveMonotoneX);\n      svg.append('path')\n        .datum(obsData)\n        .attr('class', 'line')\n        .attr('d', line)\n        .attr('stroke', 'orange');\n      svg.append('path')\n        .datum(cmaqData)\n        .attr('class', 'line')\n        .attr('d', line)\n        .attr('stroke', 'lightblue');\n      svg.append('path')\n        .datum(ourData)\n        .attr('class', 'line')\n        .attr('d', line)\n        .attr('stroke', 'pink');\n    },\n    renderChart1(stCode, onCode, pol, sD, eD, FHr) {\n      const path = 'http://127.0.0.1:5000/lineChart1';\n      axios.post(path, {\n        St_code: stCode,\n        Onsite_code: onCode,\n        pollutant: pol,\n        st_date: sD,\n        en_date: eD,\n        F_hour: FHr,\n      })\n        .then((res) => {\n          this.getLineChart('#lineChart1', 'chart1', res);\n          this.changeValues(res);\n        });\n    },\n    renderChart2(stCode, onCode, pol, sD, eD, FHr) {\n      const path = 'http://127.0.0.1:5000/lineChart2';\n      axios.post(path, {\n        St_code: stCode,\n        Onsite_code: onCode,\n        pollutant: pol,\n        st_date: sD,\n        en_date: eD,\n        F_hour: FHr,\n      })\n        .then((res) => {\n          this.getLineChart('#lineChart2', 'chart2', res);\n          this.changeValues2(res);\n        });\n    },\n  },\n  mounted() {\n    this.getLegend('#legend_obs', 'OBS_data');\n    this.getLegend('#legend_on', 'Onsite_data');\n    EventBus.$on('submit-event', (stationCode, onsiteCode, pollutant, startDate, endDate, FutHour) => {\n      this.renderChart1(stationCode, onsiteCode, pollutant, startDate, endDate, FutHour);\n      this.renderChart2(stationCode, onsiteCode, pollutant, startDate, endDate, FutHour);\n    });\n  },\n};\n</script>\n\n<style>\n/* tags */\nh4{\n  text-align: center;\n  position: absolute;\n  width: 250px;\n  margin: 10px 50px 0 125px;\n}\nhr{\n  width: 100px;\n}\n/* class */\n.col-12{\n    height: 50vh;\n}\n.line {\n  fill: none;\n  stroke-width: 3;\n}\n.legend_class{\n  width: 130px;\n  height: 50px;\n  position: absolute;\n  margin: 5px 0 0 390px;\n}\n.metrics{\n  position: absolute;\n  width: 100px;\n  height: 20px;\n  margin: 408px 0 0 0;\n}\n/* ids */\n\n</style>\n"],"sourceRoot":"src/components"}]}
=======
{"remainingRequest":"/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/node_modules/babel-loader/lib/index.js!/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/src/components/Accview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/src/components/Accview.vue","mtime":1598341374506},{"path":"/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/node_modules/cache-loader/dist/cjs.js","mtime":1594193191162},{"path":"/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/node_modules/babel-loader/lib/index.js","mtime":1594193189891},{"path":"/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/node_modules/cache-loader/dist/cjs.js","mtime":1594193191162},{"path":"/Users/reshika/cs20/Research_Assistant/New_layout/PRAISE_front/client/node_modules/vue-loader/lib/index.js","mtime":1594193201324}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuZm9udHNpemUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0ICogYXMgZDMgZnJvbSAnZDMnOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgRXZlbnRCdXMgZnJvbSAnQC9ldmVudEJ1cyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQWNjVmlldycsCiAgbWV0aG9kczogewogICAgZ2V0TGVnZW5kOiBmdW5jdGlvbiBnZXRMZWdlbmQoZGl2SUQsIG5hbWVJRCkgewogICAgICB2YXIgc3ZnID0gZDMuc2VsZWN0KGRpdklEKS5hcHBlbmQoJ3N2ZycpLmF0dHIoJ3dpZHRoJywgMTMwKS5hdHRyKCdoZWlnaHQnLCA2MCk7CiAgICAgIHZhciBuYW1lRGF0YSA9IFt7CiAgICAgICAgbmFtZTogJ0NNQVFfZGF0YScsCiAgICAgICAgY29sb3I6ICdsaWdodGJsdWUnCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAnICBPdXJfZGF0YScsCiAgICAgICAgY29sb3I6ICdwaW5rJwogICAgICB9LCB7CiAgICAgICAgbmFtZTogbmFtZUlELAogICAgICAgIGNvbG9yOiAnb3JhbmdlJwogICAgICB9XTsKICAgICAgbmFtZURhdGEuZm9yRWFjaChmdW5jdGlvbiAobCwgaSkgewogICAgICAgIHZhciBnID0gc3ZnLmFwcGVuZCgnZycpLmF0dHIoJ3RyYW5zZm9ybScsICJ0cmFuc2xhdGUoNCwgIi5jb25jYXQoaSAqIDIwICsgNSwgIikiKSk7CiAgICAgICAgZy5hcHBlbmQoJ3JlY3QnKS5hdHRyKCd3aWR0aCcsIDEwKS5hdHRyKCdoZWlnaHQnLCAxMCkuc3R5bGUoJ2ZpbGwnLCBsLmNvbG9yKTsKICAgICAgICBnLmFwcGVuZCgndGV4dCcpLmF0dHIoJ3gnLCAxMTApLmF0dHIoJ3knLCAxMCkuYXR0cigndGV4dC1hbmNob3InLCAnZW5kJykuc3R5bGUoJ3RleHQtdHJhbnNmb3JtJywgJ2NhcGl0YWxpemUnKS50ZXh0KGwubmFtZSk7CiAgICAgIH0pOwogICAgfSwKICAgIGNoYW5nZVZhbHVlczogZnVuY3Rpb24gY2hhbmdlVmFsdWVzKHJlc3BvbnNlKSB7CiAgICAgIHZhciBybXNlTmFtZSA9ICdSTVNFX0NNOiAnOwogICAgICB2YXIgaW9hTmFtZSA9ICdJT0FfQ006ICc7CiAgICAgIHZhciBybXNlTmFtZTIgPSAnUk1TRV9PTTogJzsKICAgICAgdmFyIGlvYU5hbWUyID0gJ0lPQV9PTTogJzsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ1JNU0VfMScpLmlubmVySFRNTCA9IHJtc2VOYW1lLmNvbmNhdChyZXNwb25zZS5kYXRhWzBdLlJNU0UpLmZvbnRzaXplKDIpOwogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnSU9BXzEnKS5pbm5lckhUTUwgPSBpb2FOYW1lLmNvbmNhdChyZXNwb25zZS5kYXRhWzBdLklPQSkuZm9udHNpemUoMik7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdSTVNFXzInKS5pbm5lckhUTUwgPSBybXNlTmFtZTIuY29uY2F0KHJlc3BvbnNlLmRhdGFbMF0uUk1TRV9vdXIpLmZvbnRzaXplKDIpOwogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnSU9BXzInKS5pbm5lckhUTUwgPSBpb2FOYW1lMi5jb25jYXQocmVzcG9uc2UuZGF0YVswXS5JT0Ffb3VyKS5mb250c2l6ZSgyKTsKICAgIH0sCiAgICBnZXRMaW5lQ2hhcnQ6IGZ1bmN0aW9uIGdldExpbmVDaGFydChkaXZJRCwgc3ZnSUQsIHJlc3BvbnNlKSB7CiAgICAgIGQzLnNlbGVjdCgiIyIuY29uY2F0KHN2Z0lEKSkucmVtb3ZlKCk7CiAgICAgIHZhciBtYXJnaW4gPSB7CiAgICAgICAgdG9wOiAzMCwKICAgICAgICByaWdodDogMTAsCiAgICAgICAgYm90dG9tOiA3MCwKICAgICAgICBsZWZ0OiAyNQogICAgICB9OwogICAgICB2YXIgd2lkdGggPSA1MDAgLSBtYXJnaW4ubGVmdCAtIG1hcmdpbi5yaWdodDsKICAgICAgdmFyIGhlaWdodCA9IDQwMCAtIG1hcmdpbi50b3AgLSBtYXJnaW4uYm90dG9tOwogICAgICB2YXIgc3ZnID0gZDMuc2VsZWN0KGRpdklEKS5hcHBlbmQoJ3N2ZycpLmF0dHIoJ3dpZHRoJywgd2lkdGggKyBtYXJnaW4ubGVmdCArIG1hcmdpbi5yaWdodCkuYXR0cignaGVpZ2h0JywgaGVpZ2h0ICsgbWFyZ2luLnRvcCArIG1hcmdpbi5ib3R0b20pLmF0dHIoJ2lkJywgc3ZnSUQpLmFwcGVuZCgnZycpLmF0dHIoJ3RyYW5zZm9ybScsICJ0cmFuc2xhdGUoIi5jb25jYXQobWFyZ2luLmxlZnQsICIsIikuY29uY2F0KG1hcmdpbi50b3AsICIpIikpOwogICAgICB2YXIgb2JzRGF0YSA9IHJlc3BvbnNlLmRhdGFbMF0ubGluZV9kYXRhLmZpbHRlcihmdW5jdGlvbiAoX3JlZikgewogICAgICAgIHZhciBkYXRhID0gX3JlZi5kYXRhOwogICAgICAgIHJldHVybiBbJ3N0YXRpb25fZGF0YSddLmluY2x1ZGVzKGRhdGEpOwogICAgICB9KTsKICAgICAgdmFyIGNtYXFEYXRhID0gcmVzcG9uc2UuZGF0YVswXS5saW5lX2RhdGEuZmlsdGVyKGZ1bmN0aW9uIChfcmVmMikgewogICAgICAgIHZhciBkYXRhID0gX3JlZjIuZGF0YTsKICAgICAgICByZXR1cm4gWydDTUFRX2RhdGEnXS5pbmNsdWRlcyhkYXRhKTsKICAgICAgfSk7CiAgICAgIHZhciBvdXJEYXRhID0gcmVzcG9uc2UuZGF0YVswXS5saW5lX2RhdGEuZmlsdGVyKGZ1bmN0aW9uIChfcmVmMykgewogICAgICAgIHZhciBkYXRhID0gX3JlZjMuZGF0YTsKICAgICAgICByZXR1cm4gWydPdXJfbWV0aG9kX2RhdGEnXS5pbmNsdWRlcyhkYXRhKTsKICAgICAgfSk7CiAgICAgIHZhciB4U2NhbGUgPSBkMy5zY2FsZVRpbWUoKS5kb21haW4oZDMuZXh0ZW50KG9ic0RhdGEsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQzLnRpbWVQYXJzZSgnJVktJW0tJWQgJUg6JU06JVMnKShkLnRpbWUpOwogICAgICB9KSkucmFuZ2UoWzAsIHdpZHRoXSk7CiAgICAgIHZhciB5U2NhbGUgPSBkMy5zY2FsZUxpbmVhcigpLmRvbWFpbihbMCwgZDMubWF4KGNtYXFEYXRhLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLlBvbGx1dGFudDsKICAgICAgfSldKS5yYW5nZShbaGVpZ2h0LCAwXSk7CiAgICAgIHN2Zy5hcHBlbmQoJ2cnKS5hdHRyKCdjbGFzcycsICd4IGF4aXMnKS5hdHRyKCd0cmFuc2Zvcm0nLCAidHJhbnNsYXRlKDAsICIuY29uY2F0KGhlaWdodCwgIikiKSkuY2FsbChkMy5heGlzQm90dG9tKHhTY2FsZSkudGlja3MoMTIpLnRpY2tGb3JtYXQoZDMudGltZUZvcm1hdCgnJW0tJWQgJUg6JU0nKSkpLnNlbGVjdEFsbCgndGV4dCcpLnN0eWxlKCd0ZXh0LWFuY2hvcicsICdlbmQnKS5hdHRyKCdkeCcsICctLjhlbScpLmF0dHIoJ2R5JywgJy4xNWVtJykuYXR0cigndHJhbnNmb3JtJywgZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiAncm90YXRlKC02NSknOwogICAgICB9KTsKICAgICAgc3ZnLmFwcGVuZCgnZycpLmF0dHIoJ2NsYXNzJywgJ3kgYXhpcycpLmNhbGwoZDMuYXhpc0xlZnQoeVNjYWxlKSk7CiAgICAgIHZhciBsaW5lID0gZDMubGluZSgpLngoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4geFNjYWxlKG5ldyBEYXRlKGQudGltZSkpOwogICAgICB9KS55KGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIHlTY2FsZShkLlBvbGx1dGFudCk7CiAgICAgIH0pLmN1cnZlKGQzLmN1cnZlTW9ub3RvbmVYKTsKICAgICAgc3ZnLmFwcGVuZCgncGF0aCcpLmRhdHVtKG9ic0RhdGEpLmF0dHIoJ2NsYXNzJywgJ2xpbmUnKS5hdHRyKCdkJywgbGluZSkuYXR0cignc3Ryb2tlJywgJ29yYW5nZScpOwogICAgICBzdmcuYXBwZW5kKCdwYXRoJykuZGF0dW0oY21hcURhdGEpLmF0dHIoJ2NsYXNzJywgJ2xpbmUnKS5hdHRyKCdkJywgbGluZSkuYXR0cignc3Ryb2tlJywgJ2xpZ2h0Ymx1ZScpOwogICAgICBzdmcuYXBwZW5kKCdwYXRoJykuZGF0dW0ob3VyRGF0YSkuYXR0cignY2xhc3MnLCAnbGluZScpLmF0dHIoJ2QnLCBsaW5lKS5hdHRyKCdzdHJva2UnLCAncGluaycpOwogICAgfSwKICAgIHJlbmRlckNoYXJ0MTogZnVuY3Rpb24gcmVuZGVyQ2hhcnQxKHN0Q29kZSwgcG9sLCBzRCwgZUQsIEZIcikgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHBhdGggPSAnaHR0cDovLzEyNy4wLjAuMTo1MDAwL2xpbmVDaGFydDEnOwogICAgICBheGlvcy5wb3N0KHBhdGgsIHsKICAgICAgICBTdF9jb2RlOiBzdENvZGUsCiAgICAgICAgcG9sbHV0YW50OiBwb2wsCiAgICAgICAgc3RfZGF0ZTogc0QsCiAgICAgICAgZW5fZGF0ZTogZUQsCiAgICAgICAgRl9ob3VyOiBGSHIKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMuZ2V0TGluZUNoYXJ0KCcjbGluZUNoYXJ0MScsICdjaGFydDEnLCByZXMpOwoKICAgICAgICBfdGhpcy5jaGFuZ2VWYWx1ZXMocmVzKTsKICAgICAgfSk7CiAgICB9LAogICAgcmVuZGVyQ2hhcnQyOiBmdW5jdGlvbiByZW5kZXJDaGFydDIoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIHBhdGggPSAnaHR0cDovLzEyNy4wLjAuMTo1MDAwL2xpbmVDaGFydDInOwogICAgICBheGlvcy5wb3N0KHBhdGgsIHsKICAgICAgICBPbnNpdGVfY29kZTogdGhpcy5PbnNpdGVfY29kZQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpczIuZ2V0TGluZUNoYXJ0KCcjbGluZUNoYXJ0MicsICdjaGFydDInLCByZXMpOwogICAgICB9KTsgLy8gdGhpcy5nZXRMZWdlbmQoJyNsZWdlbmRfb24nLCAnT25zaXRlX2RhdGEnKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICB0aGlzLmdldExlZ2VuZCgnI2xlZ2VuZF9vYnMnLCAnT0JTX2RhdGEnKTsKICAgIEV2ZW50QnVzLiRvbignc3VibWl0LWV2ZW50JywgZnVuY3Rpb24gKHN0YXRpb25Db2RlLCBwb2xsdXRhbnQsIHN0YXJ0RGF0ZSwgZW5kRGF0ZSwgRnV0SG91cikgewogICAgICBfdGhpczMucmVuZGVyQ2hhcnQxKHN0YXRpb25Db2RlLCBwb2xsdXRhbnQsIHN0YXJ0RGF0ZSwgZW5kRGF0ZSwgRnV0SG91cik7CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["Accview.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"row\">\n      <div class=\"col-12\">\n        <h4>AQ Monitoring station</h4>\n        <div class='legend_class' id='legend_obs'></div>\n        <div class='row'>\n          <div class='col-md-12' id='lineChart1'></div>\n        </div>\n        <div class='row'>\n          <div class=\"col-md-3\" id='RMSE_1'></div>\n          <div class=\"col-md-3 seperate\" id='IOA_1'></div>\n          <div class=\"col-md-3\" id='RMSE_2'></div>\n          <div class=\"col-md-3\" id='IOA_2'></div>\n        </div>\n      </div>\n      <hr>\n      <div class=\"col-12\" id='lineChart2'>\n        <h4>Onsite station</h4>\n        <div class='legend_class' id='legend_on'></div>\n      </div>\n  </div>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nimport axios from 'axios';\nimport EventBus from '@/eventBus';\n\nexport default {\n  name: 'AccView',\n  methods: {\n    getLegend(divID, nameID) {\n      const svg = d3.select(divID)\n        .append('svg')\n        .attr('width', 130)\n        .attr('height', 60);\n      const nameData = [{ name: 'CMAQ_data', color: 'lightblue' },\n        { name: '  Our_data', color: 'pink' }, { name: nameID, color: 'orange' }];\n      nameData.forEach((l, i) => {\n        const g = svg.append('g').attr('transform', `translate(4, ${(i * 20) + 5})`);\n        g.append('rect')\n          .attr('width', 10)\n          .attr('height', 10)\n          .style('fill', l.color);\n        g.append('text')\n          .attr('x', 110)\n          .attr('y', 10)\n          .attr('text-anchor', 'end')\n          .style('text-transform', 'capitalize')\n          .text(l.name);\n      });\n    },\n    changeValues(response) {\n      const rmseName = 'RMSE_CM: ';\n      const ioaName = 'IOA_CM: ';\n      const rmseName2 = 'RMSE_OM: ';\n      const ioaName2 = 'IOA_OM: ';\n      document.getElementById('RMSE_1').innerHTML = rmseName.concat(response.data[0].RMSE).fontsize(2);\n      document.getElementById('IOA_1').innerHTML = ioaName.concat(response.data[0].IOA).fontsize(2);\n      document.getElementById('RMSE_2').innerHTML = rmseName2.concat(response.data[0].RMSE_our).fontsize(2);\n      document.getElementById('IOA_2').innerHTML = ioaName2.concat(response.data[0].IOA_our).fontsize(2);\n    },\n    getLineChart(divID, svgID, response) {\n      d3.select(`#${svgID}`).remove();\n      const margin = {\n        top: 30, right: 10, bottom: 70, left: 25,\n      };\n      const width = 500 - margin.left - margin.right;\n      const height = 400 - margin.top - margin.bottom;\n\n      const svg = d3.select(divID).append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .attr('id', svgID)\n        .append('g')\n        .attr('transform', `translate(${margin.left},${margin.top})`);\n\n      const obsData = response.data[0].line_data.filter(({ data }) => ['station_data'].includes(data));\n      const cmaqData = response.data[0].line_data.filter(({ data }) => ['CMAQ_data'].includes(data));\n      const ourData = response.data[0].line_data.filter(({ data }) => ['Our_method_data'].includes(data));\n      const xScale = d3.scaleTime()\n        .domain(d3.extent(obsData, (d) => d3.timeParse('%Y-%m-%d %H:%M:%S')(d.time)))\n        .range([0, width]);\n\n      const yScale = d3.scaleLinear()\n        .domain([0, d3.max(cmaqData, (d) => d.Pollutant)])\n        .range([height, 0]);\n      svg.append('g')\n        .attr('class', 'x axis')\n        .attr('transform', `translate(0, ${height})`)\n        .call(d3.axisBottom(xScale)\n          .ticks(12)\n          .tickFormat(d3.timeFormat('%m-%d %H:%M')))\n        .selectAll('text')\n        .style('text-anchor', 'end')\n        .attr('dx', '-.8em')\n        .attr('dy', '.15em')\n        .attr('transform', () => 'rotate(-65)');\n      svg.append('g')\n        .attr('class', 'y axis')\n        .call(d3.axisLeft(yScale));\n      const line = d3.line()\n        .x((d) => xScale(new Date(d.time)))\n        .y((d) => yScale(d.Pollutant))\n        .curve(d3.curveMonotoneX);\n      svg.append('path')\n        .datum(obsData)\n        .attr('class', 'line')\n        .attr('d', line)\n        .attr('stroke', 'orange');\n      svg.append('path')\n        .datum(cmaqData)\n        .attr('class', 'line')\n        .attr('d', line)\n        .attr('stroke', 'lightblue');\n      svg.append('path')\n        .datum(ourData)\n        .attr('class', 'line')\n        .attr('d', line)\n        .attr('stroke', 'pink');\n    },\n    renderChart1(stCode, pol, sD, eD, FHr) {\n      const path = 'http://127.0.0.1:5000/lineChart1';\n      axios.post(path, {\n        St_code: stCode,\n        pollutant: pol,\n        st_date: sD,\n        en_date: eD,\n        F_hour: FHr,\n      })\n        .then((res) => {\n          this.getLineChart('#lineChart1', 'chart1', res);\n          this.changeValues(res);\n        });\n    },\n    renderChart2() {\n      const path = 'http://127.0.0.1:5000/lineChart2';\n      axios.post(path, {\n        Onsite_code: this.Onsite_code,\n      })\n        .then((res) => {\n          this.getLineChart('#lineChart2', 'chart2', res);\n        });\n      // this.getLegend('#legend_on', 'Onsite_data');\n    },\n  },\n  mounted() {\n    this.getLegend('#legend_obs', 'OBS_data');\n    EventBus.$on('submit-event', (stationCode, pollutant, startDate, endDate, FutHour) => {\n      this.renderChart1(stationCode, pollutant, startDate, endDate, FutHour);\n    });\n  },\n};\n</script>\n\n<style>\n/* tags */\nh4{\n  text-align: center;\n  position: absolute;\n  width: 250px;\n  margin: 10px 50px 0 125px;\n}\nhr{\n  width: 100px;\n}\n/* class */\n.col-12{\n    height: 50vh;\n}\n.line {\n  fill: none;\n  stroke-width: 3;\n}\n.legend_class{\n  width: 130px;\n  height: 50px;\n  position: absolute;\n  margin: 5px 0 0 390px;\n}\n.metrics{\n  position: absolute;\n  width: 100px;\n  height: 20px;\n  margin: 408px 0 0 0;\n}\n/* ids */\n\n</style>\n"],"sourceRoot":"src/components"}]}
>>>>>>> 357517f21ba1e7500995d786f6f80f3273603e33
